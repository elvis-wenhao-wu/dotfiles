# from https://github.com/samoshkin/tmux-config/blob/master/tmux/tmux.conf

# ========================
# === General settings ===
# ======================== 
set -g default-terminal "screen-256color"
set -g history-limit 5000
set -g buffer-limit 10
set -sg escape-time 0
set -g display-time 1500
set -g remain-on-exit off
set -g repeat-time 300
setw -g allow-rename off
setw -g automatic-rename off
setw -g aggressive-resize on
set -g renumber-windows on

bind-key -n F10 set-option status

# from nvim checkhealth warning message 
# Neither Tc nor RGB capability set. True colors are disabled. |'termguicolors'| won't work properly.
set -sa terminal-overrides ',xterm-256color:RGB'

# unbind default prefix and set it to Ctrl+a
unbind C-b
set -g prefix C-Space
bind C-Space send-prefix

# Set parent terminal title to reflect current window in tmux session 
set -g set-titles on
set -g set-titles-string "#H @ #S"

# Start index of window/pane with 1, because we're humans, not computers
set -g base-index 1
setw -g pane-base-index 1

# enable mouse support for switching panes/windows
setw -g mouse on
set -g focus-events on

# ====================
# === Key bindings ===
# ====================

# Reload tmux configuration
bind C-r source-file ~/.tmux.conf \; display "Config reloaded"

# new window and retain cwd
bind '"' split-window -c "#{pane_current_path}"
bind % split-window -h -c "#{pane_current_path}"
bind c new-window -c "#{pane_current_path}"

# Rename session and window
bind r command-prompt -I "#{window_name}" "rename-window '%%'"
bind R command-prompt -I "#{session_name}" "rename-session '%%'"

# Split panes
# bind v split-window -h -c "#{pane_current_path}"
# bind b split-window -v -c "#{pane_current_path}"

# Select pane and windows
# bind BTab previous-window # shift-tab in tmux form
# bind Tab next-window

# Kill pane/window/session shortcuts
bind w kill-pane
bind W kill-window
bind S choose-window
bind C-x confirm-before -p "kill other windows? (y/n)" "kill-window -a"
bind C-q confirm-before -p "kill-session #S? (y/n)" kill-session

# pane movement shortcuts
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# Pane resizing
# START:paneresize
bind -r H resize-pane -L 5 
bind -r J resize-pane -D 5 
bind -r K resize-pane -U 5 
bind -r L resize-pane -R 5

# =================================
# === Appearence and status bar ===
# =================================

# window segments in status line
set -g window-status-separator " "
# separator_powerline_left=""
# separator_powerline_right=""

# general status bar settings
# set -g status off
# set -g status-bg terminal
set -g status-bg default
# set -g status-fg default
set -g status-interval 60 
set -g status-justify left
set -g status-left "#[default]"
set -g status-right ""
set -g status-right-length 100
# set -g status-position top

# List of plugins
# set -g @plugin 'tmux-plugins/tpm'
# set -g @plugin 'christoomey/vim-tmux-navigator'
# set -g @plugin 'tmux-plugins/tmux-cpu'
# set -g @plugin 'tmux-plugins/tmux-sidebar'
# set -g @plugin 'samoshkin/tmux-plugin-sysstat'

# vim-tmux-navigator (tmux side, rebind <prefix> C-l to clear-screen) 
# Here we don't use tpm to install it, in order to customize the keys
# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
bind-key -n 'C-y' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'
tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l
